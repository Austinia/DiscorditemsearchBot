"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestClient = exports.getVersionRoute = exports.getGlobalRoute = exports.LifetimeCollection = exports.CacheOptionsValidator = exports.waitFor = exports.isJSON = void 0;
const util_1 = require("util");
function isJSON(content) {
    try {
        return !!JSON.parse(content);
    }
    catch (_a) {
        return false;
    }
}
exports.isJSON = isJSON;
function waitFor(delay) {
    return util_1.promisify(setTimeout)(delay);
}
exports.waitFor = waitFor;
function CacheOptionsValidator() {
    return {
        set(obj, prop, value) {
            switch (prop) {
                case "max":
                    if (typeof value !== "number")
                        throw new TypeError(`"max" 옵션은 숫자여야 합니다. (받은 타입: ${typeof value})`);
                    if (value <= 0)
                        throw new RangeError(`"max" 옵션은 0보다 커야 합니다. (받은 값: ${value}, 최소보다 '${1 - value}' 작음)`);
                    if (!Number.isSafeInteger(value))
                        throw new RangeError(`"max" 옵션은 32비트 정수만 허용됩니다. (받은 값: ${value})`);
                    break;
                case "maxAge":
                    if (typeof value !== "number")
                        throw new TypeError(`"maxAge" 옵션은 숫자여야 합니다. (받은 타입: ${typeof value})`);
                    if (value <= 0)
                        throw new RangeError(`"maxAge" 옵션은 0보다 커야 합니다. (받은 값: ${value}, 최소보다 '${1 - value}' 작음)`);
                    if (!Number.isSafeInteger(value))
                        throw new RangeError(`"maxAge" 옵션은 32비트 정수만 허용됩니다. (받은 값: ${value})`);
            }
            obj[prop] = value;
            return true;
        }
    };
}
exports.CacheOptionsValidator = CacheOptionsValidator;
var Collection_1 = require("./Collection");
Object.defineProperty(exports, "LifetimeCollection", { enumerable: true, get: function () { return __importDefault(Collection_1).default; } });
var getRoute_1 = require("../rest/getRoute");
Object.defineProperty(exports, "getGlobalRoute", { enumerable: true, get: function () { return getRoute_1.getGlobalRoute; } });
Object.defineProperty(exports, "getVersionRoute", { enumerable: true, get: function () { return getRoute_1.getVersionRoute; } });
var RequestClient_1 = require("../rest/RequestClient");
Object.defineProperty(exports, "RequestClient", { enumerable: true, get: function () { return __importDefault(RequestClient_1).default; } });
//# sourceMappingURL=index.js.map