import LifetimeCollection from "../utils/Collection";
import { Widget } from "../structures/Widget";
import type { Nullable, WidgetOptions, WidgetMakeOptions, FetchOptions } from "../utils/types";
import type { Koreanbots } from "../client/Koreanbots";
export declare class WidgetManager {
    readonly koreanbots: Koreanbots;
    readonly options?: import("../utils/types").BotManagerOptions | undefined;
    cache: LifetimeCollection<string, Nullable<Widget>>;
    constructor(koreanbots: Koreanbots, options?: import("../utils/types").BotManagerOptions | undefined);
    getVoteWidgetURL(id: string): string;
    getStatusWidgetURL(id: string): string;
    getServerWidgetURL(id: string): string;
    getVoteWidget(id: string, options?: WidgetOptions): Promise<Widget>;
    getServerWidget(id: string, options?: WidgetOptions): Promise<Widget>;
    getStatusWidget(id: string, options?: WidgetOptions): Promise<Widget>;
    /**
     * 직접적인 사용이 권장되지 않습니다.
     */
    _fetch(options: WidgetMakeOptions, fetchOptions?: FetchOptions): Promise<Widget>;
}
