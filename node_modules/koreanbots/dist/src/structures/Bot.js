"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bot = void 0;
const Base_1 = require("./Base");
const Owners_1 = require("./Owners");
const User_1 = require("./User");
const Discord_1 = require("./Discord");
class Bot extends Base_1.Base {
    constructor(koreanbots, data) {
        var _a, _b, _c;
        super();
        this.koreanbots = koreanbots;
        this.id = data.id;
        this.name = data.name;
        this.discriminator = data.tag;
        this.tag = `${data.name}#${data.tag}`;
        this.avatar = data.avatar;
        this.flags = data.flags;
        this.owners = new Owners_1.Owners(this.koreanbots, (_a = data.owners) === null || _a === void 0 ? void 0 : _a.map(u => new User_1.User(this.koreanbots, u)));
        this.lib = (_b = data.lib) !== null && _b !== void 0 ? _b : "discord.js";
        this.prefix = data.prefix;
        this.votes = data.votes;
        this.servers = data.servers;
        this.intro = data.intro;
        this.desc = data.desc;
        this.web = data.web;
        this.git = data.git;
        this.url = data.url;
        this.category = data.category;
        this.status = (_c = data.status) !== null && _c !== void 0 ? _c : null;
        this.discord = data.discord ? new Discord_1.Discord(this.koreanbots, data.discord) : null;
        this.vanity = data.vanity;
        this.bg = data.bg;
        this.banner = data.banner;
        this.state = data.state;
        this.shards = data.shards;
    }
    async fetchVotes({ cache } = { cache: true }) {
        const { data, message } = await this.koreanbots.api().bots(this.id).get();
        if (!data)
            throw new Error(message);
        if (cache)
            this.votes = data.votes;
        return this.votes;
    }
}
exports.Bot = Bot;
//# sourceMappingURL=Bot.js.map