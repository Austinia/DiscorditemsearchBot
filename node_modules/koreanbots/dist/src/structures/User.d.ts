import { Collection } from "discord.js";
import { Base } from "./Base";
import { UserFlags } from "../utils/types";
import { Github } from "./Github";
import type { Koreanbots } from "../client/Koreanbots";
import type { RawUserInstance, Nullable } from "../utils/types";
import type { Bot } from "./Bot";
export declare class User extends Base {
    koreanbots: Koreanbots;
    readonly id: string;
    readonly flags: UserFlags;
    readonly github: Nullable<Github>;
    readonly tag: string;
    readonly username: string;
    readonly bots: Collection<string, Nullable<Bot> | undefined>;
    constructor(koreanbots: Koreanbots, data: RawUserInstance);
    private cacheAfterCacheMiss;
    is(type: keyof typeof UserFlags | UserFlags): boolean;
    fetch(): Promise<User>;
}
